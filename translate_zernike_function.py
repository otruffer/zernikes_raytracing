import math
import numpy as np
import re

format = """
z(0)= N(0,0)*1;
z(1)= N(1,-1)*y1;
z(2)= N(1, 1)*x1;
z(3)= N(2,-2)*(2*x1*y1);
z(4)= N(2, 0)*(-1 + 2*s1);
z(5)= N(2, 2)*(x2 - y2);
z(6)= N(3,-3)*(3*x2*y1 - y3);
z(7)= N(3,-1)*(-2*y1 + 3*s1*y1);
z(8)= N(3, 1)*(-2*x1 + 3*s1*x1);
z(9)= N(3, 3)*(x3 - 3*x1*y2);
z(10)= N(4,-4)*(4*x3*y1 - 4*x1*y3);
z(11)= N(4,-2)*(-6*x1*y1 + 8*s1*x1*y1);
z(12)= N(4, 0)*(1 - 6*s1 + 6*s2);
z(13)= N(4, 2)*(-3*x2 + 4*s1*x2 + 3*y2 - 4*s1*y2);
z(14)= N(4, 4)*(x4 - 6*x2*y2 + y4);
z(15)= N(5,-5)*(5*x4*y1 - 10*x2*y3 + y5);
z(16)= N(5,-3)*(-12*x2*y1 + 15*s1*x2*y1 + 4*y3 - 5*s1*y3);
z(17)= N(5,-1)*(3*y1 - 12*s1*y1 + 10*s2*y1);
z(18)= N(5, 1)*(3*x1 - 12*s1*x1 + 10*s2*x1);
z(19)= N(5, 3)*(-4*x3 + 5*s1*x3 + 12*x1*y2 - 15*s1*x1*y2);
z(20)= N(5, 5)*(x5 - 10*x3*y2 + 5*x1*y4);
z(21)= N(6,-6)*(6*x5*y1 - 20*x3*y3 + 6*x1*y5);
z(22)= N(6,-4)*(-20*x3*y1 + 24*s1*x3*y1 + 20*x1*y3 - 24*s1*x1*y3);
z(23)= N(6,-2)*(12*x1*y1 - 40*s1*x1*y1 + 30*s2*x1*y1);
z(24)= N(6, 0)*(-1 + 12*s1 - 30*s2 + 20*s3);
z(25)= N(6, 2)*(6*x2 - 20*s1*x2 + 15*s2*x2 - 6*y2 + 20*s1*y2 - 15*s2*y2);
z(26)= N(6, 4)*(-5*x4 + 6*s1*x4 + 30*x2*y2 - 36*s1*x2*y2 - 5*y4 + 6*s1*y4);
z(27)= N(6, 6)*(x6 - 15*x4*y2 + 15*x2*y4 - y6);
z(28)= N(7,-7)*(7*x6*y1 - 35*x4*y3 + 21*x2*y5 - y7);
z(29)= N(7,-5)*(-30*x4*y1 + 35*s1*x4*y1 + 60*x2*y3 - 70*s1*x2*y3 - 6*y5 + 7*s1*y5);
z(30)= N(7,-3)*(30*x2*y1 - 90*s1*x2*y1 + 63*s2*x2*y1 - 10*y3 + 30*s1*y3 - 21*s2*y3);
z(31)= N(7,-1)*(-4*y1 + 30*s1*y1 - 60*s2*y1 + 35*s3*y1);
z(32)= N(7, 1)*(-4*x1 + 30*s1*x1 - 60*s2*x1 + 35*s3*x1);
z(33)= N(7, 3)*(10*x3 - 30*s1*x3 + 21*s2*x3 - 30*x1*y2 + 90*s1*x1*y2 - 63*s2*x1*y2);
z(34)= N(7, 5)*(-6*x5 + 7*s1*x5 + 60*x3*y2 - 70*s1*x3*y2 - 30*x1*y4 + 35*s1*x1*y4);
z(35)= N(7, 7)*(x7 - 21*x5*y2 + 35*x3*y4 - 7*x1*y6);
z(36)= N(8,-8)*(8*x7*y1 - 56*x5*y3 + 56*x3*y5 - 8*x1*y7);
z(37)= N(8,-6)*(-42*x5*y1 + 48*s1*x5*y1 + 140*x3*y3 - 160*s1*x3*y3 - 42*x1*y5 + 48*s1*x1*y5);
z(38)= N(8,-4)*(60*x3*y1 - 168*s1*x3*y1 + 112*s2*x3*y1 - 60*x1*y3 + 168*s1*x1*y3 - 112*s2*x1*y3);
z(39)= N(8,-2)*(-20*x1*y1 + 120*s1*x1*y1 - 210*s2*x1*y1 + 112*s3*x1*y1);
z(40)= N(8, 0)*(1 - 20*s1 + 90*s2 - 140*s3 + 70*s4);
z(41)= N(8, 2)*(-10*x2 + 60*s1*x2 - 105*s2*x2 + 56*s3*x2 + 10*y2 - 60*s1*y2 + 105*s2*y2 - 56*s3*y2);
z(42)= N(8, 4)*(15*x4 - 42*s1*x4 + 28*s2*x4 - 90*x2*y2 + 252*s1*x2*y2 - 168*s2*x2*y2 + 15*y4 - 42*s1*y4 + 28*s2*y4);
z(43)= N(8, 6)*(-7*x6 + 8*s1*x6 + 105*x4*y2 - 120*s1*x4*y2 - 105*x2*y4 + 120*s1*x2*y4 + 7*y6 - 8*s1*y6);
z(44)= N(8, 8)*(x8 - 28*x6*y2 + 70*x4*y4 - 28*x2*y6 + y8);
z(45)= N(9,-9)*(9*x8*y1 - 84*x6*y3 + 126*x4*y5 - 36*x2*y7 + y9);
z(46)= N(9,-7)*(-56*x6*y1 + 63*s1*x6*y1 + 280*x4*y3 - 315*s1*x4*y3 - 168*x2*y5 + 189*s1*x2*y5 + 8*y7 - 9*s1*y7);
z(47)= N(9,-5)*(105*x4*y1 - 280*s1*x4*y1 + 180*s2*x4*y1 - 210*x2*y3 + 560*s1*x2*y3 - 360*s2*x2*y3 + 21*y5 - 56*s1*y5 + 36*s2*y5);
z(48)= N(9,-3)*(-60*x2*y1 + 315*s1*x2*y1 - 504*s2*x2*y1 + 252*s3*x2*y1 + 20*y3 - 105*s1*y3 + 168*s2*y3 - 84*s3*y3);
z(49)= N(9,-1)*(5*y1 - 60*s1*y1 + 210*s2*y1 - 280*s3*y1 + 126*s4*y1);
z(50)= N(9, 1)*(5*x1 - 60*s1*x1 + 210*s2*x1 - 280*s3*x1 + 126*s4*x1);
z(51)= N(9, 3)*(-20*x3 + 105*s1*x3 - 168*s2*x3 + 84*s3*x3 + 60*x1*y2 - 315*s1*x1*y2 + 504*s2*x1*y2 - 252*s3*x1*y2);
z(52)= N(9, 5)*(21*x5 - 56*s1*x5 + 36*s2*x5 - 210*x3*y2 + 560*s1*x3*y2 - 360*s2*x3*y2 + 105*x1*y4 - 280*s1*x1*y4 + 180*s2*x1*y4);
z(53)= N(9, 7)*(-8*x7 + 9*s1*x7 + 168*x5*y2 - 189*s1*x5*y2 - 280*x3*y4 + 315*s1*x3*y4 + 56*x1*y6 - 63*s1*x1*y6);
z(54)= N(9, 9)*(x9 - 36*x7*y2 + 126*x5*y4 - 84*x3*y6 + 9*x1*y8);
z(55)= N(10,-10)*(10*x9*y1 - 120*x7*y3 + 252*x5*y5 - 120*x3*y7 + 10*x1*y9);
z(56)= N(10, -8)*(-72*x7*y1 + 80*s1*x7*y1 + 504*x5*y3 - 560*s1*x5*y3 - 504*x3*y5 + 560*s1*x3*y5 + 72*x1*y7 - 80*s1*x1*y7);
z(57)= N(10, -6)*(168*x5*y1 - 432*s1*x5*y1 + 270*s2*x5*y1 - 560*x3*y3 + 1440*s1*x3*y3 - 900*s2*x3*y3 + 168*x1*y5 - 432*s1*x1*y5 + 270*s2*x1*y5);
z(58)= N(10, -4)*(-140*x3*y1 + 672*s1*x3*y1 - 1008*s2*x3*y1 + 480*s3*x3*y1 + 140*x1*y3 - 672*s1*x1*y3 + 1008*s2*x1*y3 - 480*s3*x1*y3);
z(59)= N(10, -2)*(30*x1*y1 - 280*s1*x1*y1 + 840*s2*x1*y1 - 1008*s3*x1*y1 + 420*s4*x1*y1);
z(60)= N(10,  0)*(-1 + 30*s1 - 210*s2 + 560*s3 - 630*s4 + 252*s5);
z(61)= N(10,  2)*(15*x2 - 140*s1*x2 + 420*s2*x2 - 504*s3*x2 + 210*s4*x2 - 15*y2 + 140*s1*y2 - 420*s2*y2 + 504*s3*y2 - 210*s4*y2);
z(62)= N(10,  4)*(-35*x4 + 168*s1*x4 - 252*s2*x4 + 120*s3*x4 + 210*x2*y2 - 1008*s1*x2*y2 + 1512*s2*x2*y2 - 720*s3*x2*y2 - 35*y4 + 168*s1*y4 - 252*s2*y4 + 120*s3*y4);
z(63)= N(10,  6)*(28*x6 - 72*s1*x6 + 45*s2*x6 - 420*x4*y2 + 1080*s1*x4*y2 - 675*s2*x4*y2 + 420*x2*y4 - 1080*s1*x2*y4 + 675*s2*x2*y4 - 28*y6 + 72*s1*y6 - 45*s2*y6);
z(64)= N(10,  8)*(-9*x8 + 10*s1*x8 + 252*x6*y2 - 280*s1*x6*y2 - 630*x4*y4 + 700*s1*x4*y4 + 252*x2*y6 - 280*s1*x2*y6 - 9*y8 + 10*s1*y8);
z(65)= N(10, 10)*(x10 - y10 - 45*x8*y2 + 210*x6*y4 - 210*x4*y6 + 45*x2*y8);
z(66)= N(11,-11)*(11*x10*y1 - y11 - 165*x8*y3 + 462*x6*y5 - 330*x4*y7 + 55*x2*y9);
z(67)= N(11, -9)*(-90*x8*y1 + 99*s1*x8*y1 + 840*x6*y3 - 924*s1*x6*y3 - 1260*x4*y5 + 1386*s1*x4*y5 + 360*x2*y7 - 396*s1*x2*y7 - 10*y9 + 11*s1*y9);
z(68)= N(11, -7)*(252*x6*y1 - 630*s1*x6*y1 + 385*s2*x6*y1 - 1260*x4*y3 + 3150*s1*x4*y3 - 1925*s2*x4*y3 + 756*x2*y5 - 1890*s1*x2*y5 + 1155*s2*x2*y5 - 36*y7 + 90*s1*y7 - 55*s2*y7);
z(69)= N(11, -5)*(-280*x4*y1 + 1260*s1*x4*y1 - 1800*s2*x4*y1 + 825*s3*x4*y1 + 560*x2*y3 - 2520*s1*x2*y3 + 3600*s2*x2*y3 - 1650*s3*x2*y3 - 56*y5 + 252*s1*y5 - 360*s2*y5 + 165*s3*y5);
z(70)= N(11, -3)*(105*x2*y1 - 840*s1*x2*y1 + 2268*s2*x2*y1 - 2520*s3*x2*y1 + 990*s4*x2*y1 - 35*y3 + 280*s1*y3 - 756*s2*y3 + 840*s3*y3 - 330*s4*y3);
z(71)= N(11, -1)*(-6*y1 + 105*s1*y1 - 560*s2*y1 + 1260*s3*y1 - 1260*s4*y1 + 462*s5*y1);
z(72)= N(11,  1)*(-6*x1 + 105*s1*x1 - 560*s2*x1 + 1260*s3*x1 - 1260*s4*x1 + 462*s5*x1);
z(73)= N(11,  3)*(35*x3 - 280*s1*x3 + 756*s2*x3 - 840*s3*x3 + 330*s4*x3 - 105*x1*y2 + 840*s1*x1*y2 - 2268*s2*x1*y2 + 2520*s3*x1*y2 - 990*s4*x1*y2);
z(74)= N(11,  5)*(-56*x5 + 252*s1*x5 - 360*s2*x5 + 165*s3*x5 + 560*x3*y2 - 2520*s1*x3*y2 + 3600*s2*x3*y2 - 1650*s3*x3*y2 - 280*x1*y4 + 1260*s1*x1*y4 - 1800*s2*x1*y4 + 825*s3*x1*y4);
z(75)= N(11,  7)*(36*x7 - 90*s1*x7 + 55*s2*x7 - 756*x5*y2 + 1890*s1*x5*y2 - 1155*s2*x5*y2 + 1260*x3*y4 - 3150*s1*x3*y4 + 1925*s2*x3*y4 - 252*x1*y6 + 630*s1*x1*y6 - 385*s2*x1*y6);
z(76)= N(11,  9)*(-10*x9 + 11*s1*x9 + 360*x7*y2 - 396*s1*x7*y2 - 1260*x5*y4 + 1386*s1*x5*y4 + 840*x3*y6 - 924*s1*x3*y6 - 90*x1*y8 + 99*s1*x1*y8);
z(77)= N(11, 11)*(x11 - 11*x1*y10 - 55*x9*y2 + 330*x7*y4 - 462*x5*y6 + 165*x3*y8);
z(78)= N(12,-12)*(12*x11*y1 - 12*x1*y11 - 220*x9*y3 + 792*x7*y5 - 792*x5*y7 + 220*x3*y9);
z(79)= N(12,-10)*(-110*x9*y1 + 120*s1*x9*y1 + 1320*x7*y3 - 1440*s1*x7*y3 - 2772*x5*y5 + 3024*s1*x5*y5 + 1320*x3*y7 - 1440*s1*x3*y7 - 110*x1*y9 + 120*s1*x1*y9);
z(80)= N(12, -8)*(360*x7*y1 - 880*s1*x7*y1 + 528*s2*x7*y1 - 2520*x5*y3 + 6160*s1*x5*y3 - 3696*s2*x5*y3 + 2520*x3*y5 - 6160*s1*x3*y5 + 3696*s2*x3*y5 - 360*x1*y7 + 880*s1*x1*y7 - 528*s2*x1*y7);
z(81)= N(12, -6)*(-504*x5*y1 + 2160*s1*x5*y1 - 2970*s2*x5*y1 + 1320*s3*x5*y1 + 1680*x3*y3 - 7200*s1*x3*y3 + 9900*s2*x3*y3 - 4400*s3*x3*y3 - 504*x1*y5 + 2160*s1*x1*y5 - 2970*s2*x1*y5 + 1320*s3*x1*y5);
z(82)= N(12, -4)*(280*x3*y1 - 2016*s1*x3*y1 + 5040*s2*x3*y1 - 5280*s3*x3*y1 + 1980*s4*x3*y1 - 280*x1*y3 + 2016*s1*x1*y3 - 5040*s2*x1*y3 + 5280*s3*x1*y3 - 1980*s4*x1*y3);
z(83)= N(12, -2)*(-42*x1*y1 + 560*s1*x1*y1 - 2520*s2*x1*y1 + 5040*s3*x1*y1 - 4620*s4*x1*y1 + 1584*s5*x1*y1);
z(84)= N(12,  0)*(1 - 42*s1 + 420*s2 - 1680*s3 + 3150*s4 - 2772*s5 + 924*s6);
z(85)= N(12,  2)*(-21*x2 + 280*s1*x2 - 1260*s2*x2 + 2520*s3*x2 - 2310*s4*x2 + 792*s5*x2 + 21*y2 - 280*s1*y2 + 1260*s2*y2 - 2520*s3*y2 + 2310*s4*y2 - 792*s5*y2);
z(86)= N(12,  4)*(70*x4 - 504*s1*x4 + 1260*s2*x4 - 1320*s3*x4 + 495*s4*x4 - 420*x2*y2 + 3024*s1*x2*y2 - 7560*s2*x2*y2 + 7920*s3*x2*y2 - 2970*s4*x2*y2 + 70*y4 - 504*s1*y4 + 1260*s2*y4 - 1320*s3*y4 + 495*s4*y4);
z(87)= N(12,  6)*(-84*x6 + 360*s1*x6 - 495*s2*x6 + 220*s3*x6 + 1260*x4*y2 - 5400*s1*x4*y2 + 7425*s2*x4*y2 - 3300*s3*x4*y2 - 1260*x2*y4 + 5400*s1*x2*y4 - 7425*s2*x2*y4 + 3300*s3*x2*y4 + 84*y6 - 360*s1*y6 + 495*s2*y6 - 220*s3*y6);
z(88)= N(12,  8)*(45*x8 - 110*s1*x8 + 66*s2*x8 - 1260*x6*y2 + 3080*s1*x6*y2 - 1848*s2*x6*y2 + 3150*x4*y4 - 7700*s1*x4*y4 + 4620*s2*x4*y4 - 1260*x2*y6 + 3080*s1*x2*y6 - 1848*s2*x2*y6 + 45*y8 - 110*s1*y8 + 66*s2*y8);
z(89)= N(12, 10)*(-11*x10 + 12*s1*x10 + 11*y10 - 12*s1*y10 + 495*x8*y2 - 540*s1*x8*y2 - 2310*x6*y4 + 2520*s1*x6*y4 + 2310*x4*y6 - 2520*s1*x4*y6 - 495*x2*y8 + 540*s1*x2*y8);
z(90)= N(12, 12)*(x12-66*x10*y2+495*x8*y4-924*x6*y6+495*x4*y8-66*x2*y10+y12);
z(91) = N(13,-13)*(13*x12*y1-286*x10*y3+1287*x8*y5-1716*x6*y7+715*x4*y9-78*x2*y11+1*y13);
z(92) = N(13,-11)*(-132*x10*y1+1980*x8*y3-5544*x6*y5+3960*x4*y7-660*x2*y9+12*y11+143*x10*y1*(x2+y2)-2145*x8*y3*(x2+y2)+6006*x6*y5*(x2+y2)-4290*x4*y7*(x2+y2)+715*x2*y9*(x2+y2)-13*y11*(x2+y2));
z(93) = N(13, -9)*(495*x8*y1-4620*x6*y3+6930*x4*y5-1980*x2*y7+55*y9-1188*x8*y1*(x2+y2)+11088*x6*y3*(x2+y2)-16632*x4*y5*(x2+y2)+4752*x2*y7*(x2+y2)-132*y9*(x2+y2)+702*x8*y1*(x2+y2)*2-6552*x6*y3*(x2+y2)*2+9828*x4*y5*(x2+y2)*2-2808*x2*y7*(x2+y2)*2+78*y9*(x2+y2)*2);
z(94) = N(13, -7)*(-840*x6*y1+4200*x4*y3-2520*x2*y5+120*y7+3465*x6*y1*(x2+y2)-17325*x4*y3*(x2+y2)+10395*x2*y5*(x2+y2)-495*y7*(x2+y2)-4620*x6*y1*(x2+y2)*2+23100*x4*y3*(x2+y2)*2-13860*x2*y5*(x2+y2)*2+660*y7*(x2+y2)*2+2002*x6*y1*(x2+y2)*3-10010*x4*y3*(x2+y2)*3+6006*x2*y5*(x2+y2)*3-286*y7*(x2+y2)*3);
z(95) = N(13, -5)*(630*x4*y1-1260*x2*y3+126*y5-4200*x4*y1*(x2+y2)+8400*x2*y3*(x2+y2)-840*y5*(x2+y2)+9900*x4*y1*(x2+y2)*2-19800*x2*y3*(x2+y2)*2+1980*y5*(x2+y2)*2-9900*x4*y1*(x2+y2)*3+19800*x2*y3*(x2+y2)*3-1980*y5*(x2+y2)*3+3575*x4*y1*(x2+y2)*4-7150*x2*y3*(x2+y2)*4+715*y5*(x2+y2)*4);
z(96) = N(13, -3)*(-168*x2*y1+56*y3+1890*x2*y1*(x2+y2)-630*y3*(x2+y2)-7560*x2*y1*(x2+y2)*2+2520*y3*(x2+y2)*2+13860*x2*y1*(x2+y2)*3-4620*y3*(x2+y2)*3-11880*x2*y1*(x2+y2)*4+3960*y3*(x2+y2)*4+3861*x2*y1*(x2+y2)*5-1287*y3*(x2+y2)*5);
z(97) = N(13, -1)*(7*y1-168*y1*(x2+y2)+1260*y1*(x2+y2)*2-4200*y1*(x2+y2)*3+6930*y1*(x2+y2)*4-5544*y1*(x2+y2)*5+1716*y1*(x2+y2)*6);
z(98) = N(13,  1)*(7*x1-168*y1*(x2+y2)+1260*x1*(x2+y2)*2-4200*x1*(x2+y2)*3+6930*x1*(x2+y2)*4-5544*x1*(x2+y2)*5+1716*x1*(x2+y2)*6);
z(99) = N(13,  3)*(-56*x3+168*x1*y2+630*x3*(x2+y2)-1890*x1*y2*(x2+y2)-2520*x3*(x2+y2)*2+7560*x1*y2*(x2+y2)*2+4620*x3*(x2+y2)*3-13860*x1*y2*(x2+y2)*3-3960*x3*(x2+y2)*4+11880*x1*y2*(x2+y2)*4+1287*x3*(x2+y2)*5-3861*x1*y2*(x2+y2)*5);
z(100)= N(13,  5)*(126*x5-1260*x3*y2+630*x1*y4-840*x5*(x2+y2)+8400*x3*y2*(x2+y2)-4200*x1*y4*(x2+y2)+1980*x5*(x2+y2)*2-19800*x3*y2*(x2+y2)*2+9900*x1*y4*(x2+y2)*2-1980*x5*(x2+y2)*3+19800*x3*y2*(x2+y2)*3-9900*x1*y4*(x2+y2)*3+715*x5*(x2+y2)*4-7150*x3*y2*(x2+y2)*4+3575*x1*y4*(x2+y2)*4);
z(101)= N(13,  7)*(-120*x7+2520*x5*y2-4200*x3*y4+840*x1*y6+495*x7*(x2+y2)-10395*x5*y2*(x2+y2)+17325*x3*y4*(x2+y2)-3465*x1*y6*(x2+y2)-660*x7*(x2+y2)*2+13860*x5*y2*(x2+y2)*2-23100*x3*y4*(x2+y2)*2+4620*x1*y6*(x2+y2)*2+286*x7*(x2+y2)*3-6006*x5*y2*(x2+y2)*3+10010*x3*y4*(x2+y2)*3-2002*x1*y6*(x2+y2)*3);
z(102)= N(13,  9)*(55*x9-1980*x7*y2+6930*x5*y4-4620*x3*y6+495*x1*y8-132*x9*(x2+y2)+4752*x7*y2*(x2+y2)-16632*x5*y4*(x2+y2)+11088*x3*y6*(x2+y2)-1188*x1*y8*(x2+y2)+78*x9*(x2+y2)*2-2808*x7*y2*(x2+y2)*2+9828*x5*y4*(x2+y2)*2-6552*x3*y6*(x2+y2)*2+702*x1*y8*(x2+y2)*2);
z(103)= N(13, 11)*(-12*x11+660*x9*y2-3960*x7*y4+5544*x5*y6-1980*x3*y8+132*x1*y10+13*x11*(x2+y2)-715*x9*y2*(x2+y2)+4290*x7*y4*(x2+y2)-6006*x5*y6*(x2+y2)+2145*x3*y8*(x2+y2)-143*x1*y10*(x2 + y2));
z(104)= N(13, 13)*(1*x13-78*x11*y2+715*x9*y4-1716*x7*y6+1287*x5*y8-286*x3*y10+13*x1*y12);
"""

def N(n, m):
    dm = 1.0 if m == 0 else 0.0
    result = math.sqrt(2.0 * (n + 1.0) / (1.0 + dm))
    if result % 1 == 0:
        return result
    else:
        return np.sqrt((2.0 * (n + 1.0) / (1.0 + dm)))

def N_replacer(x):
    return "%s" % N(int(x.group(1)), int(x.group(2)))

def x_replacer(x):
    if x.group(1) == "1":
        return "x"
    return "tf.pow(x, %s)" % x.group(1)

def y_replacer(x):
    if x.group(1) == "1":
        return "y"
    return "tf.pow(y, %s)" % x.group(1)

def s_replacer(x):
    if x.group(1) == "1":
        return "(tf.pow(x, 2) + tf.pow(y, 2))"
    return "tf.pow(tf.pow(x, 2) + tf.pow(y, 2), %s)" % x.group(1)


def z_replacer(x):
    return "cfs[%s]" % x.group(1)

lines = ""
for line in format.splitlines():
    line = re.sub(r'N\((-?\d+),\s*(-?\d+)\)', N_replacer, line)
    line = re.sub(r'x(\d+)', x_replacer, line)
    line = re.sub(r'y(\d+)', y_replacer, line)
    line = re.sub(r's(\d+)', s_replacer, line)
    line = re.sub(r'z\((\d+)\)', z_replacer, line)
    line = re.sub(r';', '', line)
    lines += line + "\n"

print(lines)

